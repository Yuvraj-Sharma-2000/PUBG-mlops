name: Provision t3.micro EC2
on:
  workflow_dispatch:
    inputs:
      ec2_name:
        description: EC2 name
        required: true
        default: 'Otaku'
        type: string
jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install PyInstaller
        run: pyinstaller --onefile app.py

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.TF_USER_AWS_KEY }}'
          aws-secret-access-key: '${{ secrets.TF_USER_AWS_SECRET }}'
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_ec2_name: "${{ github.event.inputs.ec2_name }}"
          TF_VAR_ec2_user: myuser
          TF_VAR_ec2_host: 12.34.56.78  
        run: |
          cd tf-example/
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve

      - name: Package Flask app
        run: |
          cd .
          python -m PyInstaller application.py

      - name: Check if executable file was generated
        run: |
          if [ -f "/home/runner/work/ec2/ec2/dist/app" ]; then
            echo "Executable file found!"
          else
            echo "ERROR: Executable file not found!"
          fi      

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: dist/app
  
  deploy_ec2:
    needs: provision-ec2
    runs-on: ubuntu-latest
    steps:
      - name: Copy files to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "dist/app"
          target: "/home/ec2-user/app"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip -y
          pip3 install virtualenv
          virtualenv env
          source env/bin/activate
          pip3 install -r requirements.txt